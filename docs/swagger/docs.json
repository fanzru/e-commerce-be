{
  "swagger": "2.0",
  "info": {
    "description": "Cart management API for e-commerce platform",
    "title": "Cart API",
    "version": "1.0.0"
  },
  "basePath": "/",
  "paths": {
    "/api/v1/auth/login": {
      "post": {
        "description": "Authenticates a user and returns a token pair",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Auth"
        ],
        "summary": "Login a user",
        "operationId": "loginUser",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoginUserParams"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login successful",
            "schema": {
              "$ref": "#/definitions/TokenResponse"
            }
          },
          "400": {
            "description": "Invalid input",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Invalid credentials",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/v1/auth/logout": {
      "post": {
        "description": "Invalidates the refresh token",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Auth"
        ],
        "summary": "Logout a user",
        "operationId": "logoutUser",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "refresh_token"
              ],
              "properties": {
                "refresh_token": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Logged out successfully"
          },
          "400": {
            "description": "Invalid input",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/v1/auth/register": {
      "post": {
        "description": "Creates a new user account",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Auth"
        ],
        "summary": "Register a new user",
        "operationId": "registerUser",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegisterUserParams"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User registered successfully",
            "schema": {
              "$ref": "#/definitions/UserResponse"
            }
          },
          "400": {
            "description": "Invalid input",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "409": {
            "description": "Email already exists",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/v1/carts/me": {
      "get": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "description": "Retrieves the current authenticated user's cart",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Cart"
        ],
        "summary": "Get current user's cart",
        "operationId": "getCurrentUserCart",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CartResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "description": "Adds a new item to the current user's cart or updates quantity if already exists",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Cart Items"
        ],
        "summary": "Add item to cart",
        "operationId": "addItemToCurrentUserCart",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "product_id",
                "quantity"
              ],
              "properties": {
                "product_id": {
                  "description": "ID of the product to add",
                  "type": "string",
                  "format": "uuid"
                },
                "quantity": {
                  "description": "Quantity to add",
                  "type": "integer",
                  "minimum": 1
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Item added or updated",
            "schema": {
              "$ref": "#/definitions/CartItemResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Product not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/v1/carts/me/clear": {
      "delete": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "description": "Removes all items from the user's cart",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Cart"
        ],
        "summary": "Clear user cart",
        "operationId": "clearUserCart",
        "responses": {
          "204": {
            "description": "Cart cleared",
            "schema": {
              "$ref": "#/definitions/StandardResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/v1/carts/me/items/{itemId}": {
      "put": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "description": "Updates the quantity of an item in the cart",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Cart Items"
        ],
        "summary": "Update cart item",
        "operationId": "updateCartItem",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "quantity"
              ],
              "properties": {
                "quantity": {
                  "description": "New quantity",
                  "type": "integer",
                  "minimum": 1
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Item updated",
            "schema": {
              "$ref": "#/definitions/CartItemResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Item not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "description": "Removes an item from the cart",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Cart Items"
        ],
        "summary": "Remove item from cart",
        "operationId": "removeCartItem",
        "responses": {
          "204": {
            "description": "Item removed",
            "schema": {
              "$ref": "#/definitions/StandardResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Item not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "format": "uuid",
          "description": "Cart Item ID",
          "name": "itemId",
          "in": "path",
          "required": true
        }
      ]
    },
    "/api/v1/checkouts": {
      "get": {
        "description": "Retrieves a paginated list of checkouts",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Checkout"
        ],
        "summary": "List checkouts",
        "parameters": [
          {
            "type": "integer",
            "default": 1,
            "description": "Page number",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 10,
            "description": "Number of items per page",
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CheckoutListResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "description": "Process the current user's cart and create a checkout. User is identified from the Authorization header.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Checkout"
        ],
        "summary": "Create a new checkout",
        "operationId": "Mixin0",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Checkout created",
            "schema": {
              "$ref": "#/definitions/CheckoutResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Cart not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "409": {
            "description": "Cart already checked out",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/v1/checkouts/{id}": {
      "get": {
        "description": "Retrieves a checkout by its ID",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Checkout"
        ],
        "summary": "Get checkout by ID",
        "operationId": "Mixin0",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "Checkout ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CheckoutResponse"
            }
          },
          "404": {
            "description": "Checkout not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/v1/checkouts/{id}/payment": {
      "put": {
        "description": "Updates the payment status of a checkout",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Payment"
        ],
        "summary": "Update payment status",
        "operationId": "Mixin0",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "Checkout ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PaymentStatusUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payment status updated",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Checkout not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/v1/checkouts/{id}/status": {
      "put": {
        "description": "Updates the order status of a checkout",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Order"
        ],
        "summary": "Update order status",
        "operationId": "Mixin0",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "Checkout ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OrderStatusUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order status updated",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Checkout not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/v1/products": {
      "get": {
        "description": "Returns a list of products with pagination",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Products"
        ],
        "summary": "List products",
        "operationId": "listProducts",
        "parameters": [
          {
            "type": "integer",
            "default": 1,
            "description": "Page number for pagination",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 10,
            "description": "Number of items per page",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Filter by SKU",
            "name": "sku",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Filter by name",
            "name": "name",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of products",
            "schema": {
              "$ref": "#/definitions/ProductListResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post": {
        "description": "Creates a new product in the system",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Products"
        ],
        "summary": "Create a product",
        "operationId": "createProduct",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateProductParams"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Product created",
            "schema": {
              "$ref": "#/definitions/ProductResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/v1/products/{id}": {
      "get": {
        "description": "Returns a product by its UUID",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Products"
        ],
        "summary": "Get product by ID",
        "operationId": "getProduct",
        "responses": {
          "200": {
            "description": "Product details",
            "schema": {
              "$ref": "#/definitions/ProductResponse"
            }
          },
          "404": {
            "description": "Product not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "Updates an existing product",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Products"
        ],
        "summary": "Update product",
        "operationId": "updateProduct",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "Product ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateProductParams"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product updated",
            "schema": {
              "$ref": "#/definitions/ProductResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Product not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes a product from the system",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Products"
        ],
        "summary": "Delete product",
        "operationId": "deleteProduct",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "Product ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Product deleted",
            "schema": {
              "$ref": "#/definitions/StandardResponse"
            }
          },
          "404": {
            "description": "Product not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "format": "uuid",
          "description": "Product ID",
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/api/v1/promotions": {
      "get": {
        "description": "Retrieves a paginated list of promotions",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Promotions"
        ],
        "summary": "List promotions",
        "operationId": "listPromotions",
        "parameters": [
          {
            "type": "integer",
            "default": 1,
            "description": "Page number",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 10,
            "description": "Number of items per page",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Filter by active status",
            "name": "active",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PromotionListResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post": {
        "description": "Create a new promotion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Promotions"
        ],
        "summary": "Create a new promotion",
        "operationId": "createPromotion",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PromotionCreate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Promotion created",
            "schema": {
              "$ref": "#/definitions/PromotionResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/v1/promotions/{id}": {
      "get": {
        "description": "Retrieves a promotion by its ID",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Promotions"
        ],
        "summary": "Get promotion by ID",
        "operationId": "getPromotion",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PromotionResponse"
            }
          },
          "404": {
            "description": "Promotion not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes a promotion by its ID",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Promotions"
        ],
        "summary": "Delete promotion",
        "operationId": "deletePromotion",
        "responses": {
          "204": {
            "description": "Promotion deleted",
            "schema": {
              "$ref": "#/definitions/StandardResponse"
            }
          },
          "404": {
            "description": "Promotion not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "description": "Updates a promotion's active status",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Promotions"
        ],
        "summary": "Update promotion status",
        "operationId": "updatePromotionStatus",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "active"
              ],
              "properties": {
                "active": {
                  "description": "Active status",
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PromotionResponse"
            }
          },
          "404": {
            "description": "Promotion not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "format": "uuid",
          "description": "Promotion ID",
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/api/v1/users/me": {
      "get": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "description": "Returns the authenticated user's details",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Users"
        ],
        "summary": "Get current user",
        "operationId": "getCurrentUser",
        "responses": {
          "200": {
            "description": "Current user details",
            "schema": {
              "$ref": "#/definitions/UserResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/api/v1/users/{user_id}/orders": {
      "get": {
        "description": "Retrieves a list of orders for a specific user",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Order"
        ],
        "summary": "Get user orders",
        "operationId": "Mixin0",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "User ID",
            "name": "user_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "default": 1,
            "description": "Page number",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 10,
            "description": "Number of items per page",
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OrderListResponse"
            }
          },
          "404": {
            "description": "User not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ApplicablePromotion": {
      "type": "object",
      "properties": {
        "description": {
          "description": "Promotion description",
          "type": "string"
        },
        "discount": {
          "description": "Discount amount for this promotion",
          "type": "number",
          "format": "float"
        },
        "id": {
          "description": "Promotion ID",
          "type": "string",
          "format": "uuid"
        },
        "type": {
          "description": "Promotion type",
          "type": "string"
        }
      }
    },
    "BulkDiscountPromotion": {
      "type": "object",
      "required": [
        "type",
        "description",
        "sku",
        "min_quantity",
        "discount_percentage"
      ],
      "properties": {
        "active": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "discount_percentage": {
          "type": "number",
          "format": "float",
          "maximum": 100,
          "minimum": 0
        },
        "min_quantity": {
          "type": "integer",
          "minimum": 1
        },
        "sku": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "BULK_DISCOUNT"
          ]
        }
      }
    },
    "Buy3Pay2Promotion": {
      "type": "object",
      "required": [
        "type",
        "description",
        "sku",
        "min_quantity",
        "paid_quantity_divisor",
        "free_quantity_divisor"
      ],
      "properties": {
        "active": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "free_quantity_divisor": {
          "type": "integer",
          "minimum": 1
        },
        "min_quantity": {
          "type": "integer",
          "minimum": 1
        },
        "paid_quantity_divisor": {
          "type": "integer",
          "minimum": 1
        },
        "sku": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "BUY_3_PAY_2"
          ]
        }
      }
    },
    "BuyOneGetOneFreePromotion": {
      "type": "object",
      "required": [
        "type",
        "description",
        "trigger_sku",
        "free_sku",
        "trigger_quantity",
        "free_quantity"
      ],
      "properties": {
        "active": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "free_quantity": {
          "type": "integer",
          "minimum": 1
        },
        "free_sku": {
          "type": "string"
        },
        "trigger_quantity": {
          "type": "integer",
          "minimum": 1
        },
        "trigger_sku": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "BUY_ONE_GET_ONE_FREE"
          ]
        }
      }
    },
    "Cart": {
      "type": "object",
      "properties": {
        "applicable_promotions": {
          "description": "List of promotions that can be applied to this cart",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicablePromotion"
          }
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CartItem"
          }
        },
        "potential_discount": {
          "description": "Total potential discount if all applicable promotions are applied",
          "type": "number",
          "format": "float"
        },
        "potential_total": {
          "description": "Potential total after applying all available discounts",
          "type": "number",
          "format": "float"
        },
        "subtotal": {
          "type": "number",
          "format": "float"
        },
        "total_items": {
          "type": "integer"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        },
        "user_id": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "CartItem": {
      "type": "object",
      "properties": {
        "created_at": {
          "description": "Creation timestamp",
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "description": "Cart item ID",
          "type": "string",
          "format": "uuid"
        },
        "product_id": {
          "description": "Product ID",
          "type": "string",
          "format": "uuid"
        },
        "product_name": {
          "description": "Product name",
          "type": "string"
        },
        "product_sku": {
          "description": "Product SKU",
          "type": "string"
        },
        "quantity": {
          "description": "Quantity",
          "type": "integer"
        },
        "subtotal": {
          "description": "Item subtotal (unit_price * quantity)",
          "type": "number",
          "format": "float"
        },
        "unit_price": {
          "description": "Product unit price",
          "type": "number",
          "format": "float"
        },
        "updated_at": {
          "description": "Last update timestamp",
          "type": "string",
          "format": "date-time"
        },
        "user_id": {
          "description": "User ID who owns this cart item",
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "CartItemResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/StandardResponse"
        },
        {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/definitions/CartItem"
            }
          }
        }
      ]
    },
    "CartResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/StandardResponse"
        },
        {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/definitions/Cart"
            }
          }
        }
      ]
    },
    "Checkout": {
      "type": "object",
      "properties": {
        "completed_at": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CheckoutItem"
          }
        },
        "notes": {
          "type": "string",
          "x-nullable": true
        },
        "payment_method": {
          "type": "string",
          "x-nullable": true
        },
        "payment_reference": {
          "type": "string",
          "x-nullable": true
        },
        "payment_status": {
          "type": "string",
          "enum": [
            "PENDING",
            "PAID",
            "FAILED",
            "REFUNDED"
          ]
        },
        "promotions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PromotionApplied"
          }
        },
        "status": {
          "type": "string",
          "enum": [
            "CREATED",
            "PROCESSING",
            "SHIPPED",
            "DELIVERED",
            "CANCELLED"
          ]
        },
        "subtotal": {
          "type": "number",
          "format": "float"
        },
        "total": {
          "type": "number",
          "format": "float"
        },
        "total_discount": {
          "type": "number",
          "format": "float"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        },
        "user_id": {
          "type": "string",
          "format": "uuid",
          "x-nullable": true
        }
      }
    },
    "CheckoutItem": {
      "type": "object",
      "properties": {
        "checkout_id": {
          "type": "string",
          "format": "uuid"
        },
        "discount": {
          "type": "number",
          "format": "float"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "product_id": {
          "type": "string",
          "format": "uuid"
        },
        "product_name": {
          "type": "string"
        },
        "product_sku": {
          "type": "string"
        },
        "quantity": {
          "type": "integer"
        },
        "subtotal": {
          "type": "number",
          "format": "float"
        },
        "total": {
          "type": "number",
          "format": "float"
        },
        "unit_price": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "CheckoutListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/StandardResponse"
        },
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "properties": {
                "checkouts": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CheckoutSummary"
                  }
                },
                "meta": {
                  "$ref": "#/definitions/PaginationMeta"
                }
              }
            }
          }
        }
      ]
    },
    "CheckoutResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/StandardResponse"
        },
        {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/definitions/Checkout"
            }
          }
        }
      ]
    },
    "CheckoutSummary": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "payment_status": {
          "type": "string",
          "enum": [
            "PENDING",
            "PAID",
            "FAILED",
            "REFUNDED"
          ]
        },
        "status": {
          "type": "string",
          "enum": [
            "CREATED",
            "PROCESSING",
            "SHIPPED",
            "DELIVERED",
            "CANCELLED"
          ]
        },
        "subtotal": {
          "type": "number",
          "format": "float"
        },
        "total": {
          "type": "number",
          "format": "float"
        },
        "total_discount": {
          "type": "number",
          "format": "float"
        },
        "user_id": {
          "type": "string",
          "format": "uuid",
          "x-nullable": true
        }
      }
    },
    "CreateProductParams": {
      "type": "object",
      "required": [
        "sku",
        "name",
        "price",
        "inventory"
      ],
      "properties": {
        "inventory": {
          "description": "Available inventory",
          "type": "integer"
        },
        "name": {
          "description": "Product name",
          "type": "string"
        },
        "price": {
          "description": "Product price",
          "type": "number",
          "format": "float"
        },
        "sku": {
          "description": "Product SKU",
          "type": "string"
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "required": [
        "message",
        "code",
        "server_time"
      ],
      "properties": {
        "code": {
          "description": "Error code",
          "type": "string"
        },
        "data": {
          "description": "Additional error data",
          "type": "object",
          "x-nullable": true
        },
        "message": {
          "description": "Error message",
          "type": "string"
        },
        "server_time": {
          "description": "Server timestamp",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "LoginUserParams": {
      "type": "object",
      "required": [
        "email",
        "password"
      ],
      "properties": {
        "email": {
          "type": "string",
          "format": "email"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "OrderListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/StandardResponse"
        },
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/definitions/PaginationMeta"
                },
                "orders": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OrderSummary"
                  }
                }
              }
            }
          }
        }
      ]
    },
    "OrderStatusUpdateRequest": {
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "status": {
          "description": "New order status",
          "type": "string",
          "enum": [
            "CREATED",
            "PROCESSING",
            "SHIPPED",
            "DELIVERED",
            "CANCELLED"
          ]
        }
      }
    },
    "OrderSummary": {
      "type": "object",
      "properties": {
        "completed_at": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "item_count": {
          "type": "integer"
        },
        "payment_status": {
          "type": "string",
          "enum": [
            "PENDING",
            "PAID",
            "FAILED",
            "REFUNDED"
          ]
        },
        "status": {
          "type": "string",
          "enum": [
            "CREATED",
            "PROCESSING",
            "SHIPPED",
            "DELIVERED",
            "CANCELLED"
          ]
        },
        "subtotal": {
          "type": "number",
          "format": "float"
        },
        "total": {
          "type": "number",
          "format": "float"
        },
        "total_discount": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "PaginationMeta": {
      "type": "object",
      "properties": {
        "current_page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "total": {
          "type": "integer"
        },
        "total_pages": {
          "type": "integer"
        }
      }
    },
    "PaymentStatusUpdateRequest": {
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "payment_method": {
          "description": "Payment method used (e.g. \"CREDIT_CARD\", \"PAYPAL\", \"BANK_TRANSFER\")",
          "type": "string"
        },
        "payment_reference": {
          "description": "Reference number or transaction ID from payment provider",
          "type": "string"
        },
        "status": {
          "description": "New payment status",
          "type": "string",
          "enum": [
            "PENDING",
            "PAID",
            "FAILED",
            "REFUNDED"
          ]
        }
      }
    },
    "ProductListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/StandardResponse"
        },
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "properties": {
                "products": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Product ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "inventory": {
                        "description": "Available inventory",
                        "type": "integer"
                      },
                      "name": {
                        "description": "Product name",
                        "type": "string"
                      },
                      "price": {
                        "description": "Product price",
                        "type": "number",
                        "format": "float"
                      },
                      "sku": {
                        "description": "Product SKU",
                        "type": "string"
                      }
                    }
                  }
                },
                "total": {
                  "description": "Total number of products",
                  "type": "integer"
                }
              }
            }
          }
        }
      ]
    },
    "ProductResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/StandardResponse"
        },
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "properties": {
                "id": {
                  "description": "Product ID",
                  "type": "string",
                  "format": "uuid"
                },
                "inventory": {
                  "description": "Available inventory",
                  "type": "integer"
                },
                "name": {
                  "description": "Product name",
                  "type": "string"
                },
                "price": {
                  "description": "Product price",
                  "type": "number",
                  "format": "float"
                },
                "sku": {
                  "description": "Product SKU",
                  "type": "string"
                }
              }
            }
          }
        }
      ]
    },
    "Promotion": {
      "type": "object",
      "properties": {
        "active": {
          "type": "boolean"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "type": {
          "type": "string",
          "enum": [
            "BUY_ONE_GET_ONE_FREE",
            "BUY_3_PAY_2",
            "BULK_DISCOUNT"
          ]
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "PromotionApplied": {
      "type": "object",
      "properties": {
        "checkout_id": {
          "type": "string",
          "format": "uuid"
        },
        "description": {
          "type": "string"
        },
        "discount": {
          "type": "number",
          "format": "float"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "promotion_id": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "PromotionCreate": {},
    "PromotionListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/StandardResponse"
        },
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/definitions/PaginationMeta"
                },
                "promotions": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Promotion"
                  }
                }
              }
            }
          }
        }
      ]
    },
    "PromotionResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/StandardResponse"
        },
        {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/definitions/Promotion"
            }
          }
        }
      ]
    },
    "RegisterUserParams": {
      "type": "object",
      "required": [
        "name",
        "email",
        "password"
      ],
      "properties": {
        "email": {
          "type": "string",
          "format": "email"
        },
        "name": {
          "type": "string",
          "maxLength": 100,
          "minLength": 2
        },
        "password": {
          "type": "string",
          "maxLength": 100,
          "minLength": 8
        },
        "role": {
          "type": "string",
          "default": "customer",
          "enum": [
            "admin",
            "customer"
          ]
        }
      }
    },
    "StandardResponse": {
      "type": "object",
      "required": [
        "data",
        "message",
        "code",
        "server_time"
      ],
      "properties": {
        "code": {
          "description": "Response code",
          "type": "string"
        },
        "data": {
          "description": "Response data payload",
          "type": "object"
        },
        "message": {
          "description": "Response message",
          "type": "string"
        },
        "server_time": {
          "description": "Server timestamp",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "SuccessResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/StandardResponse"
        },
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "x-nullable": true
            }
          }
        }
      ]
    },
    "TokenResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/StandardResponse"
        },
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "properties": {
                "access_token": {
                  "description": "JWT access token",
                  "type": "string"
                },
                "expires_in": {
                  "description": "Token expiration time in seconds",
                  "type": "integer"
                },
                "refresh_token": {
                  "description": "Refresh token for obtaining a new access token",
                  "type": "string"
                },
                "token_type": {
                  "description": "Token type",
                  "type": "string",
                  "default": "bearer"
                }
              }
            }
          }
        }
      ]
    },
    "UpdatePasswordParams": {
      "type": "object",
      "required": [
        "current_password",
        "new_password"
      ],
      "properties": {
        "current_password": {
          "type": "string"
        },
        "new_password": {
          "type": "string",
          "maxLength": 100,
          "minLength": 8
        }
      }
    },
    "UpdateProductParams": {
      "type": "object",
      "properties": {
        "inventory": {
          "description": "Available inventory",
          "type": "integer"
        },
        "name": {
          "description": "Product name",
          "type": "string"
        },
        "price": {
          "description": "Product price",
          "type": "number",
          "format": "float"
        }
      }
    },
    "UpdateUserParams": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "format": "email"
        },
        "name": {
          "type": "string",
          "maxLength": 100,
          "minLength": 2
        },
        "role": {
          "type": "string",
          "enum": [
            "admin",
            "customer"
          ]
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "email": {
          "type": "string",
          "format": "email"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        },
        "role": {
          "type": "string",
          "enum": [
            "admin",
            "customer"
          ]
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "UserListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/StandardResponse"
        },
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/definitions/PaginationMeta"
                },
                "users": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/User"
                  }
                }
              }
            }
          }
        }
      ]
    },
    "UserResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/StandardResponse"
        },
        {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/definitions/User"
            }
          }
        }
      ]
    }
  },
  "securityDefinitions": {
    "BearerAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "tags": [
    {
      "description": "Shopping cart operations",
      "name": "Cart"
    },
    {
      "description": "Operations for managing items in a cart",
      "name": "Cart Items"
    },
    {
      "description": "Checkout operations",
      "name": "Checkout"
    },
    {
      "description": "Payment processing operations",
      "name": "Payment"
    },
    {
      "description": "Order management operations",
      "name": "Order"
    },
    {
      "description": "Product management operations",
      "name": "Products"
    },
    {
      "description": "Promotion management operations",
      "name": "Promotions"
    },
    {
      "description": "Authentication operations",
      "name": "Auth"
    },
    {
      "description": "User management operations",
      "name": "Users"
    }
  ],
  "x-components": {}
}
{
  "swagger": "2.0",
  "info": {
    "description": "API for user management and authentication",
    "title": "User API",
    "version": "1.0.0"
  },
  "basePath": "/",
  "paths": {
    "/api/v1/auth/login": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoginUserParams"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login successful",
            "schema": {
              "$ref": "#/definitions/TokenResponse"
            }
          },
          "400": {
            "description": "Invalid input",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Invalid credentials",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "Auth"
        ],
        "description": "Authenticates a user and returns a token pair",
        "operationId": "loginUser",
        "summary": "Login a user"
      }
    },
    "/api/v1/auth/logout": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "refresh_token": {
                  "type": "string"
                }
              },
              "required": [
                "refresh_token"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Logged out successfully"
          },
          "400": {
            "description": "Invalid input",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "Auth"
        ],
        "description": "Invalidates the refresh token",
        "operationId": "logoutUser",
        "summary": "Logout a user"
      }
    },
    "/api/v1/auth/register": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegisterUserParams"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User registered successfully",
            "schema": {
              "$ref": "#/definitions/UserResponse"
            }
          },
          "400": {
            "description": "Invalid input",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "409": {
            "description": "Email already exists",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "Auth"
        ],
        "description": "Creates a new user account",
        "operationId": "registerUser",
        "summary": "Register a new user"
      }
    },
    "/api/v1/users/me": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Current user details",
            "schema": {
              "$ref": "#/definitions/UserResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "tags": [
          "Users"
        ],
        "description": "Returns the authenticated user's details",
        "operationId": "getCurrentUser",
        "summary": "Get current user"
      }
    }
  },
  "definitions": {
    "ErrorResponse": {
      "properties": {
        "code": {
          "description": "Error code",
          "type": "string"
        },
        "data": {
          "description": "Additional error data",
          "type": "object",
          "x-nullable": true
        },
        "message": {
          "description": "Error message",
          "type": "string"
        },
        "server_time": {
          "description": "Server timestamp",
          "format": "date-time",
          "type": "string"
        }
      },
      "required": [
        "message",
        "code",
        "server_time"
      ],
      "type": "object"
    },
    "LoginUserParams": {
      "properties": {
        "email": {
          "format": "email",
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      },
      "required": [
        "email",
        "password"
      ],
      "type": "object"
    },
    "PaginationMeta": {
      "properties": {
        "current_page": {
          "type": "integer"
        },
        "per_page": {
          "type": "integer"
        },
        "total": {
          "type": "integer"
        },
        "total_pages": {
          "type": "integer"
        }
      },
      "type": "object"
    },
    "RegisterUserParams": {
      "properties": {
        "email": {
          "format": "email",
          "type": "string"
        },
        "name": {
          "maxLength": 100,
          "minLength": 2,
          "type": "string"
        },
        "password": {
          "maxLength": 100,
          "minLength": 8,
          "type": "string"
        },
        "role": {
          "default": "customer",
          "enum": [
            "admin",
            "customer"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "email",
        "password"
      ],
      "type": "object"
    },
    "StandardResponse": {
      "properties": {
        "code": {
          "description": "Response code",
          "type": "string"
        },
        "data": {
          "description": "Response data",
          "type": "object"
        },
        "message": {
          "description": "Response message",
          "type": "string"
        },
        "server_time": {
          "description": "Server timestamp",
          "format": "date-time",
          "type": "string"
        }
      },
      "required": [
        "data",
        "message",
        "code",
        "server_time"
      ],
      "type": "object"
    },
    "TokenResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/StandardResponse"
        },
        {
          "properties": {
            "data": {
              "properties": {
                "access_token": {
                  "description": "JWT access token",
                  "type": "string"
                },
                "expires_in": {
                  "description": "Token expiration time in seconds",
                  "type": "integer"
                },
                "refresh_token": {
                  "description": "Refresh token for obtaining a new access token",
                  "type": "string"
                },
                "token_type": {
                  "default": "bearer",
                  "description": "Token type",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      ]
    },
    "UpdatePasswordParams": {
      "properties": {
        "current_password": {
          "type": "string"
        },
        "new_password": {
          "maxLength": 100,
          "minLength": 8,
          "type": "string"
        }
      },
      "required": [
        "current_password",
        "new_password"
      ],
      "type": "object"
    },
    "UpdateUserParams": {
      "properties": {
        "email": {
          "format": "email",
          "type": "string"
        },
        "name": {
          "maxLength": 100,
          "minLength": 2,
          "type": "string"
        },
        "role": {
          "enum": [
            "admin",
            "customer"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "User": {
      "properties": {
        "created_at": {
          "format": "date-time",
          "type": "string"
        },
        "email": {
          "format": "email",
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "role": {
          "enum": [
            "admin",
            "customer"
          ],
          "type": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "UserListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/StandardResponse"
        },
        {
          "properties": {
            "data": {
              "properties": {
                "meta": {
                  "$ref": "#/definitions/PaginationMeta"
                },
                "users": {
                  "items": {
                    "$ref": "#/definitions/User"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      ]
    },
    "UserResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/StandardResponse"
        },
        {
          "properties": {
            "data": {
              "$ref": "#/definitions/User"
            }
          },
          "type": "object"
        }
      ]
    }
  },
  "securityDefinitions": {
    "BearerAuth": {
      "in": "header",
      "name": "Authorization",
      "type": "apiKey"
    }
  },
  "tags": [
    {
      "description": "Authentication operations",
      "name": "Auth"
    },
    {
      "description": "User management operations",
      "name": "Users"
    }
  ],
  "x-components": {}
}
